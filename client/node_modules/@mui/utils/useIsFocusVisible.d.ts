<<<<<<< HEAD
import * as React from 'react';
export declare function teardown(doc: Document): void;
export interface UseIsFocusVisibleResult {
    isFocusVisibleRef: React.MutableRefObject<boolean>;
    onBlur: (event: React.FocusEvent<any>) => void;
    onFocus: (event: React.FocusEvent<any>) => void;
    ref: React.Ref<unknown>;
}
export default function useIsFocusVisible(): UseIsFocusVisibleResult;
=======
import * as React from 'react';
export declare function teardown(doc: Document): void;
export interface UseIsFocusVisibleResult {
    isFocusVisibleRef: React.MutableRefObject<boolean>;
    onBlur: (event: React.FocusEvent<any>) => void;
    onFocus: (event: React.FocusEvent<any>) => void;
    ref: React.Ref<unknown>;
}
export default function useIsFocusVisible(): UseIsFocusVisibleResult;
>>>>>>> 58a65206fda5304f053658dc04426a88cfa4c82c
